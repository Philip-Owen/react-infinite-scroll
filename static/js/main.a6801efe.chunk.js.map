{"version":3,"sources":["Card.js","App.js","index.js"],"names":["CardDiv","styled","div","Card","props","id","data","sampleData","Array","from","length","x","i","AppContainer","App","state","count","continueScroll","debounce","window","innerHeight","document","documentElement","scrollTop","offsetHeight","loadUsers","newCount","users","slice","newData","setState","this","addEventListener","map","key","React","Component","ReactDOM","render","getElementById"],"mappings":"2iBAIA,IAAMA,EAAUC,IAAOC,IAAV,KAqBEC,EATF,SAAAC,GAAU,IACdC,EAAOD,EAAME,KAAbD,GACR,OACC,kBAACL,EAAD,KACC,4BAAKK,K,oTCdR,IAAME,EAAaC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,SAACC,EAAGC,GAClD,MAAO,CAAEP,GAAIO,EAAI,MAGZC,EAAeZ,IAAOC,IAAV,KA4CHY,E,2MAnCdC,MAAQ,CACPC,MAAO,EACPV,KAAM,I,EAQPW,eAAiBC,KAAS,WACrBC,OAAOC,YAAcC,SAASC,gBAAgBC,YAAcF,SAASC,gBAAgBE,cACxF,EAAKC,cAEJ,K,EAEHA,UAAY,WAAO,IAAD,EACO,EAAKV,MAArBC,EADS,EACTA,MAAOV,EADE,EACFA,KACXoB,EAAWV,EAAQ,EACnBW,EAAQpB,EAAWqB,MAAMZ,EAAOU,GAChCG,EAAO,sBAAOvB,GAAP,YAAgBqB,IAC3B,EAAKG,SAAS,CAAEd,MAAOU,EAAUpB,KAAMuB,K,mFAfvCE,KAAKN,YACLN,OAAOa,iBAAiB,SAAUD,KAAKd,kB,+BAiB9B,IACDX,EAASyB,KAAKhB,MAAdT,KACR,OACC,kBAACO,EAAD,KACC,+CACCP,EAAKI,OAAS,EAAIJ,EAAK2B,KAAI,SAAAtB,GAAC,OAAI,kBAAC,EAAD,CAAMuB,IAAKvB,EAAEN,GAAIC,KAAMK,OAAS,U,GA9BnDwB,IAAMC,WCdxBC,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASkB,eAAe,W","file":"static/js/main.a6801efe.chunk.js","sourcesContent":["import React from 'react';\n\nimport styled from 'styled-components';\n\nconst CardDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\ttext-align: center;\n\tborder: 1px solid black;\n\tmargin:20px;\n\tpadding: 30px;\n\theight: 150px;\n\twidth: 50%;\n`;\n\nconst Card = props => {\n\tconst { id } = props.data;\n\treturn (\n\t\t<CardDiv>\n\t\t\t<h2>{id}</h2>\n\t\t</CardDiv>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport styled from 'styled-components';\n\nimport Card from './Card';\n\nconst sampleData = Array.from({ length: 100 }, (x, i) => {\n\treturn { id: i + 1 };\n});\n\nconst AppContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n\t\t'Droid Sans', 'Helvetica Neue', sans-serif;\n`;\n\nclass App extends React.Component {\n\tstate = {\n\t\tcount: 0,\n\t\tdata: [],\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadUsers();\n\t\twindow.addEventListener('scroll', this.continueScroll);\n\t}\n\n\tcontinueScroll = debounce(() => {\n\t\tif (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n\t\t\tthis.loadUsers();\n\t\t}\n\t}, 1000);\n\n\tloadUsers = () => {\n\t\tconst { count, data } = this.state;\n\t\tlet newCount = count + 5;\n\t\tlet users = sampleData.slice(count, newCount);\n\t\tlet newData = [...data, ...users];\n\t\tthis.setState({ count: newCount, data: newData });\n\t};\n\n\trender() {\n\t\tconst { data } = this.state;\n\t\treturn (\n\t\t\t<AppContainer>\n\t\t\t\t<h1>Infinite Scroll</h1>\n\t\t\t\t{data.length > 0 ? data.map(x => <Card key={x.id} data={x} />) : null}\n\t\t\t</AppContainer>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}